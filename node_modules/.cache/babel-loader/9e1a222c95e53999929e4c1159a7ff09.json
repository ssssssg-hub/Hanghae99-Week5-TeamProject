{"ast":null,"code":"const ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const addTodo = payload => {\n  return {\n    type: ADD_TODO,\n    payload\n  };\n};\nexport const deleteTodo = payload => {\n  return {\n    type: DELETE_TODO,\n    payload\n  };\n};\nexport const toggleTodo = payload => {\n  return {\n    type: TOGGLE_TODO,\n    payload\n  };\n};\nconst initialState = {\n  list: [{\n    id: 1,\n    // id는 모두 고유값이어야 합니다.\n    title: \"리액트 공부 열심히하기\",\n    body: \"심화주차까지 다 보기\",\n    isDone: false\n  }, {\n    id: 2,\n    // id는 모두 고유값이어야 합니다.\n    title: \"알고리즘 공부하기\",\n    body: \"매주 두 문제씩 풀기\",\n    isDone: false\n  }],\n  emList: {\n    id: \"0\",\n    title: \"\",\n    body: \"\",\n    isDone: false\n  }\n};\nconst counter = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        list: [...state.list, action.payload]\n      };\n    case DELETE_TODO:\n      return {\n        list: state.list.filter(todo => todo.id !== action.payload)\n      };\n    case TOGGLE_TODO:\n      return {};\n    default:\n      return state;\n  }\n};\nexport default counter;","map":{"version":3,"names":["ADD_TODO","DELETE_TODO","TOGGLE_TODO","addTodo","payload","type","deleteTodo","toggleTodo","initialState","list","id","title","body","isDone","emList","counter","state","action","filter","todo"],"sources":["/Users/ssg/Desktop/week4/src/redux/modules/counter.js"],"sourcesContent":["const ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst TOGGLE_TODO = \"TOGGLE_TODO\";\n\nexport const addTodo = (payload) => {\n  return {\n    type: ADD_TODO,\n    payload,\n  };\n};\nexport const deleteTodo = (payload) => {\n  return {\n    type: DELETE_TODO,\n    payload,\n  };\n};\nexport const toggleTodo = (payload) => {\n  return {\n    type: TOGGLE_TODO,\n    payload,\n  };\n};\n\nconst initialState = {\n  list: [\n    {\n      id: 1, // id는 모두 고유값이어야 합니다.\n      title: \"리액트 공부 열심히하기\",\n      body: \"심화주차까지 다 보기\",\n      isDone: false,\n    },\n    {\n      id: 2, // id는 모두 고유값이어야 합니다.\n      title: \"알고리즘 공부하기\",\n      body: \"매주 두 문제씩 풀기\",\n      isDone: false,\n    },\n  ],\n  emList: {\n    id: \"0\",\n    title: \"\",\n    body: \"\",\n    isDone: false,\n  },\n};\nconst counter = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        list: [...state.list, action.payload],\n      };\n    case DELETE_TODO:\n      return {\n        list: state.list.filter((todo) => todo.id !== action.payload),\n      };\n    case TOGGLE_TODO:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport default counter;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAU;AAC3B,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,WAAW,GAAG,aAAa;AAEjC,OAAO,MAAMC,OAAO,GAAIC,OAAO,IAAK;EAClC,OAAO;IACLC,IAAI,EAAEL,QAAQ;IACdI;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAME,UAAU,GAAIF,OAAO,IAAK;EACrC,OAAO;IACLC,IAAI,EAAEJ,WAAW;IACjBG;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMG,UAAU,GAAIH,OAAO,IAAK;EACrC,OAAO;IACLC,IAAI,EAAEH,WAAW;IACjBE;EACF,CAAC;AACH,CAAC;AAED,MAAMI,YAAY,GAAG;EACnBC,IAAI,EAAE,CACJ;IACEC,EAAE,EAAE,CAAC;IAAE;IACPC,KAAK,EAAE,cAAc;IACrBC,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE;EACV,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IAAE;IACPC,KAAK,EAAE,WAAW;IAClBC,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE;EACV,CAAC,CACF;EACDC,MAAM,EAAE;IACNJ,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV;AACF,CAAC;AACD,MAAME,OAAO,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGR,YAAY;EAAA,IAAES,MAAM;EAC3C,QAAQA,MAAM,CAACZ,IAAI;IACjB,KAAKL,QAAQ;MACX,OAAO;QACL,GAAGgB,KAAK;QACRP,IAAI,EAAE,CAAC,GAAGO,KAAK,CAACP,IAAI,EAAEQ,MAAM,CAACb,OAAO;MACtC,CAAC;IACH,KAAKH,WAAW;MACd,OAAO;QACLQ,IAAI,EAAEO,KAAK,CAACP,IAAI,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKO,MAAM,CAACb,OAAO;MAC9D,CAAC;IACH,KAAKF,WAAW;MACd,OAAO,CAAC,CAAC;IAEX;MACE,OAAOc,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}